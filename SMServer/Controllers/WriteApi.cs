/*
 * Student Management Services
 *
 * The student management service(s) for reading student information and managing the grades. 
 *
 * OpenAPI spec version: 1.0.0-SNAPSHOT
 * Contact: vrajesh.27@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Models;
using Data.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class WriteApiController : Controller
    { 
        private readonly SMContext.SMDBContext _context;

        public WriteApiController(SMContext.SMDBContext context)
        {
            _context = context;
        }

        /// <summary>
        /// Service for adding or Updating student details.
        /// </summary>
        /// <remarks>Add or Update student details.</remarks>
        /// <param name="body">The student object that needs to be added or updated. </param>
        /// <param name="correlationID">A string identifier used for troubleshooting. * If not provided, it will be generated. </param>
        /// <response code="201">Success.</response>
        /// <response code="500">Internal Service Error.  An unexpected error occurred.</response>
        [HttpPost]
        [Route("/student-mgmt-services/service/students")]
        [SwaggerOperation("AddOrUpdateStudentDetails")]
        public virtual IActionResult AddOrUpdateStudentDetails([FromBody]Student body, [FromHeader]string correlationID)
        {
            StudentDataModel dataModel = new StudentDataModel(body);
            _context.Students.Add(dataModel);
            _context.Grades.Add(dataModel.GradeDM);
            _context.SaveChanges();
            return StatusCode(201);
        }
    }
}
