/*
 * Student Management Services
 *
 * The student management service(s) for reading student information and managing the grades. 
 *
 * OpenAPI spec version: 1.0.0-SNAPSHOT
 * Contact: vrajesh.27@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Models;
using Data.Models;

namespace IO.Swagger.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    public class ReadApiController : Controller
    {
        private readonly SMContext.SMDBContext _context;

        public ReadApiController(SMContext.SMDBContext context)
        {
            _context = context;
        }

        /// <summary>
        /// Service for retrieving student details associated to a student id.
        /// </summary>
        /// <remarks>Retrieves student details associated to a student id.</remarks>
        /// <param name="id">The unique identifier of a student. </param>
        /// <param name="correlationID">A string identifier used for troubleshooting. * If not provided, it will be generated. </param>
        /// <response code="200">Success.</response>
        /// <response code="404">Not Found. The requested student identifer is not found.</response>
        /// <response code="500">Internal Service Error.  An unexpected error occurred.</response>
        [HttpGet]
        [Route("/student-mgmt-services/service/students/{id}")]
        [SwaggerOperation("GetStudentDetailsById")]
        [SwaggerResponse(statusCode: 200, type: typeof(Student), description: "Success.")]
        public virtual IActionResult GetStudentDetailsById([FromRoute][Required]string id, [FromHeader]string correlationID)
        {
            StudentDataModel currentStudentDataModel = _context.Students.FirstOrDefault(student => student.ID.ToString() == id);

            return (currentStudentDataModel != null) ? (new ObjectResult(SMTranslator.TranslateStudent(currentStudentDataModel))) : new ObjectResult(StatusCode(404));
        }

        /// <summary>
        /// Service for searching students.
        /// </summary>
        /// <remarks>Search students.</remarks>
        /// <param name="correlationID">A string identifier used for troubleshooting. * If not provided, it will be generated. </param>
        /// <param name="grade">The filter for grade name. </param>
        /// <param name="section">The filter for grade section. </param>
        /// <response code="200">Success.</response>
        /// <response code="500">Internal Service Error.  An unexpected error occurred.</response>
        [HttpGet]
        [Route("/student-mgmt-services/service/students/student-summaries")]
        [SwaggerOperation("GetStudentSummaries")]
        [SwaggerResponse(statusCode: 200, type: typeof(StudentSummaries), description: "Success.")]
        public virtual IActionResult GetStudentSummaries([FromHeader]string correlationID, [FromQuery]string grade, [FromQuery]string section)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StudentSummaries));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);

            string exampleJson = null;
            exampleJson = "{\n  \"students\" : [ {\n    \"grade\" : \"First\",\n    \"name\" : \"Rajesh\",\n    \"id\" : \"135\"\n  }, {\n    \"grade\" : \"First\",\n    \"name\" : \"Rajesh\",\n    \"id\" : \"135\"\n  } ]\n}";

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StudentSummaries>(exampleJson)
            : default(StudentSummaries);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
